// http://www.tonyballantyne.com/graphs.html
digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.rds-instance.aws_db_instance.main" [label = "aws_db_instance.main", shape = "box"]
		"[root] module.rds-instance.aws_db_subnet_group.main" [label = "aws_db_subnet_group.main", shape = "box"]
		"[root] module.rds-instance.aws_route53_record.main" [label = "aws_route53_record.main", shape = "box"]
		"[root] module.rds-instance.aws_security_group.main" [label = "aws_security_group.main", shape = "box"]
		"[root] module.rds-instance.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.redis.aws_elasticache_cluster.main" [label = "aws_elasticache_cluster.main", shape = "box"]
		"[root] module.redis.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.bastion.aws_eip.bastion" [label = "aws_eip.bastion", shape = "box"]
		"[root] module.stack.module.bastion.aws_instance.bastion" [label = "aws_instance.bastion", shape = "box"]
		"[root] module.stack.module.bastion.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options.dns_resolver" [label = "aws_vpc_dhcp_options.dns_resolver", shape = "box"]
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options_association.dns_resolver" [label = "aws_vpc_dhcp_options_association.dns_resolver", shape = "box"]
		"[root] module.stack.module.dhcp.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.dns.aws_route53_zone.main" [label = "aws_route53_zone.main", shape = "box"]
		"[root] module.stack.module.dns.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main" [label = "aws_autoscaling_group.main", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_down" [label = "aws_autoscaling_policy.scale_down", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_up" [label = "aws_autoscaling_policy.scale_up", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_high" [label = "aws_cloudwatch_metric_alarm.cpu_high", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low" [label = "aws_cloudwatch_metric_alarm.cpu_low", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high" [label = "aws_cloudwatch_metric_alarm.memory_high", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_low" [label = "aws_cloudwatch_metric_alarm.memory_low", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main" [label = "aws_ecs_cluster.main", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_launch_configuration.main" [label = "aws_launch_configuration.main", shape = "box"]
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" [label = "aws_security_group.cluster", shape = "box"]
		"[root] module.stack.module.ecs_cluster.data.template_cloudinit_config.cloud_config" [label = "data.template_cloudinit_config.cloud_config", shape = "box"]
		"[root] module.stack.module.ecs_cluster.data.template_file.ecs_cloud_config" [label = "data.template_file.ecs_cloud_config", shape = "box"]
		"[root] module.stack.module.ecs_cluster.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.ecs_cluster.provider.template" [label = "provider.template", shape = "diamond"]
		"[root] module.stack.module.iam_role.aws_iam_instance_profile.default_ecs" [label = "aws_iam_instance_profile.default_ecs", shape = "box"]
		"[root] module.stack.module.iam_role.aws_iam_role.default_ecs_role" [label = "aws_iam_role.default_ecs_role", shape = "box"]
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_instance_role_policy" [label = "aws_iam_role_policy.default_ecs_instance_role_policy", shape = "box"]
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_service_role_policy" [label = "aws_iam_role_policy.default_ecs_service_role_policy", shape = "box"]
		"[root] module.stack.module.iam_role.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.s3_logs.aws_s3_bucket.logs" [label = "aws_s3_bucket.logs", shape = "box"]
		"[root] module.stack.module.s3_logs.data.template_file.policy" [label = "data.template_file.policy", shape = "box"]
		"[root] module.stack.module.s3_logs.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.s3_logs.provider.template" [label = "provider.template", shape = "diamond"]
		"[root] module.stack.module.security_groups.aws_security_group.external_elb" [label = "aws_security_group.external_elb", shape = "box"]
		"[root] module.stack.module.security_groups.aws_security_group.external_ssh" [label = "aws_security_group.external_ssh", shape = "box"]
		"[root] module.stack.module.security_groups.aws_security_group.internal_elb" [label = "aws_security_group.internal_elb", shape = "box"]
		"[root] module.stack.module.security_groups.aws_security_group.internal_ssh" [label = "aws_security_group.internal_ssh", shape = "box"]
		"[root] module.stack.module.security_groups.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.module.vpc.aws_eip.nat" [label = "aws_eip.nat", shape = "box"]
		"[root] module.stack.module.vpc.aws_internet_gateway.main" [label = "aws_internet_gateway.main", shape = "box"]
		"[root] module.stack.module.vpc.aws_nat_gateway.main" [label = "aws_nat_gateway.main", shape = "box"]
		"[root] module.stack.module.vpc.aws_route.external" [label = "aws_route.external", shape = "box"]
		"[root] module.stack.module.vpc.aws_route.internal" [label = "aws_route.internal", shape = "box"]
		"[root] module.stack.module.vpc.aws_route_table.external" [label = "aws_route_table.external", shape = "box"]
		"[root] module.stack.module.vpc.aws_route_table.internal" [label = "aws_route_table.internal", shape = "box"]
		"[root] module.stack.module.vpc.aws_route_table_association.external" [label = "aws_route_table_association.external", shape = "box"]
		"[root] module.stack.module.vpc.aws_route_table_association.internal" [label = "aws_route_table_association.internal", shape = "box"]
		"[root] module.stack.module.vpc.aws_subnet.external" [label = "aws_subnet.external", shape = "box"]
		"[root] module.stack.module.vpc.aws_subnet.internal" [label = "aws_subnet.internal", shape = "box"]
		"[root] module.stack.module.vpc.aws_vpc.main" [label = "aws_vpc.main", shape = "box", fillcolor=blue style=filled; color=blue;]
		"[root] module.stack.module.vpc.provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] module.stack.provider.aws (disabled)" [label = "provider.aws (disabled)", shape = "diamond"]
		"[root] module.stack.provider.template (disabled)" [label = "provider.template (disabled)", shape = "diamond"]
		"[root] provider.aws (disabled)" [label = "provider.aws (disabled)", shape = "diamond"]
		"[root] module.rds-instance.aws_db_instance.main" -> "[root] module.rds-instance.aws_db_subnet_group.main"
		"[root] module.rds-instance.aws_db_instance.main" -> "[root] module.rds-instance.aws_security_group.main"
		"[root] module.rds-instance.aws_db_instance.main" -> "[root] module.rds-instance.provider.aws"
		"[root] module.rds-instance.aws_db_subnet_group.main" -> "[root] module.rds-instance.provider.aws"
		"[root] module.rds-instance.aws_db_subnet_group.main" -> "[root] module.stack.module.vpc.aws_subnet.internal"
		"[root] module.rds-instance.aws_route53_record.main" -> "[root] module.rds-instance.aws_db_instance.main"
		"[root] module.rds-instance.aws_route53_record.main" -> "[root] module.rds-instance.provider.aws"
		"[root] module.rds-instance.aws_route53_record.main" -> "[root] module.stack.module.dns.aws_route53_zone.main"
		"[root] module.rds-instance.aws_security_group.main" -> "[root] module.rds-instance.provider.aws"
		"[root] module.rds-instance.aws_security_group.main" -> "[root] module.stack.module.security_groups.aws_security_group.internal_elb"
		"[root] module.rds-instance.aws_security_group.main" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.rds-instance.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.redis.aws_elasticache_cluster.main" -> "[root] module.redis.provider.aws"
		"[root] module.redis.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.bastion.aws_eip.bastion" -> "[root] module.stack.module.bastion.aws_instance.bastion"
		"[root] module.stack.module.bastion.aws_eip.bastion" -> "[root] module.stack.module.bastion.provider.aws"
		"[root] module.stack.module.bastion.aws_instance.bastion" -> "[root] module.stack.module.bastion.provider.aws"
		"[root] module.stack.module.bastion.aws_instance.bastion" -> "[root] module.stack.module.security_groups.aws_security_group.external_ssh"
		"[root] module.stack.module.bastion.aws_instance.bastion" -> "[root] module.stack.module.security_groups.aws_security_group.internal_ssh"
		"[root] module.stack.module.bastion.aws_instance.bastion" -> "[root] module.stack.module.vpc.aws_subnet.external"
		"[root] module.stack.module.bastion.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.bastion.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options.dns_resolver" -> "[root] module.stack.module.dhcp.provider.aws"
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options_association.dns_resolver" -> "[root] module.stack.module.dhcp.aws_vpc_dhcp_options.dns_resolver"
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options_association.dns_resolver" -> "[root] module.stack.module.dhcp.provider.aws"
		"[root] module.stack.module.dhcp.aws_vpc_dhcp_options_association.dns_resolver" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.dhcp.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.dhcp.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.dns.aws_route53_zone.main" -> "[root] module.stack.module.dns.provider.aws"
		"[root] module.stack.module.dns.aws_route53_zone.main" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.dns.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.dns.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main" -> "[root] module.stack.module.ecs_cluster.aws_launch_configuration.main"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main" -> "[root] module.stack.module.vpc.aws_subnet.external"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main" -> "[root] module.stack.module.vpc.aws_subnet.internal"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_down" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_down" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_up" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_group.main"
		"[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_up" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_high" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_up"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_high" -> "[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_high" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_down"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low" -> "[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low" -> "[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_up"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high" -> "[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_high"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high" -> "[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_high" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_low" -> "[root] module.stack.module.ecs_cluster.aws_autoscaling_policy.scale_down"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_low" -> "[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.cpu_low"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_low" -> "[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main"
		"[root] module.stack.module.ecs_cluster.aws_cloudwatch_metric_alarm.memory_low" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_ecs_cluster.main" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_launch_configuration.main" -> "[root] module.stack.module.ecs_cluster.aws_security_group.cluster"
		"[root] module.stack.module.ecs_cluster.aws_launch_configuration.main" -> "[root] module.stack.module.ecs_cluster.data.template_cloudinit_config.cloud_config"
		"[root] module.stack.module.ecs_cluster.aws_launch_configuration.main" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_launch_configuration.main" -> "[root] module.stack.module.iam_role.aws_iam_instance_profile.default_ecs"
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" -> "[root] module.stack.module.ecs_cluster.provider.aws"
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" -> "[root] module.stack.module.security_groups.aws_security_group.external_elb"
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" -> "[root] module.stack.module.security_groups.aws_security_group.internal_elb"
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" -> "[root] module.stack.module.security_groups.aws_security_group.internal_ssh"
		"[root] module.stack.module.ecs_cluster.aws_security_group.cluster" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.ecs_cluster.data.template_cloudinit_config.cloud_config" -> "[root] module.stack.module.ecs_cluster.data.template_file.ecs_cloud_config"
		"[root] module.stack.module.ecs_cluster.data.template_cloudinit_config.cloud_config" -> "[root] module.stack.module.ecs_cluster.provider.template"
		"[root] module.stack.module.ecs_cluster.data.template_file.ecs_cloud_config" -> "[root] module.stack.module.ecs_cluster.provider.template"
		"[root] module.stack.module.ecs_cluster.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.ecs_cluster.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.ecs_cluster.provider.template" -> "[root] module.stack.provider.template (disabled)"
		"[root] module.stack.module.iam_role.aws_iam_instance_profile.default_ecs" -> "[root] module.stack.module.iam_role.aws_iam_role.default_ecs_role"
		"[root] module.stack.module.iam_role.aws_iam_instance_profile.default_ecs" -> "[root] module.stack.module.iam_role.provider.aws"
		"[root] module.stack.module.iam_role.aws_iam_role.default_ecs_role" -> "[root] module.stack.module.iam_role.provider.aws"
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_instance_role_policy" -> "[root] module.stack.module.iam_role.aws_iam_role.default_ecs_role"
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_instance_role_policy" -> "[root] module.stack.module.iam_role.provider.aws"
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_service_role_policy" -> "[root] module.stack.module.iam_role.aws_iam_role.default_ecs_role"
		"[root] module.stack.module.iam_role.aws_iam_role_policy.default_ecs_service_role_policy" -> "[root] module.stack.module.iam_role.provider.aws"
		"[root] module.stack.module.iam_role.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.iam_role.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.s3_logs.aws_s3_bucket.logs" -> "[root] module.stack.module.s3_logs.data.template_file.policy"
		"[root] module.stack.module.s3_logs.aws_s3_bucket.logs" -> "[root] module.stack.module.s3_logs.provider.aws"
		"[root] module.stack.module.s3_logs.data.template_file.policy" -> "[root] module.stack.module.s3_logs.provider.template"
		"[root] module.stack.module.s3_logs.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.s3_logs.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.s3_logs.provider.template" -> "[root] module.stack.provider.template (disabled)"
		"[root] module.stack.module.security_groups.aws_security_group.external_elb" -> "[root] module.stack.module.security_groups.provider.aws"
		"[root] module.stack.module.security_groups.aws_security_group.external_elb" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.security_groups.aws_security_group.external_ssh" -> "[root] module.stack.module.security_groups.provider.aws"
		"[root] module.stack.module.security_groups.aws_security_group.external_ssh" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.security_groups.aws_security_group.internal_elb" -> "[root] module.stack.module.security_groups.provider.aws"
		"[root] module.stack.module.security_groups.aws_security_group.internal_elb" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.security_groups.aws_security_group.internal_ssh" -> "[root] module.stack.module.security_groups.aws_security_group.external_ssh"
		"[root] module.stack.module.security_groups.aws_security_group.internal_ssh" -> "[root] module.stack.module.security_groups.provider.aws"
		"[root] module.stack.module.security_groups.aws_security_group.internal_ssh" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.security_groups.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.security_groups.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.module.vpc.aws_eip.nat" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_internet_gateway.main" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.vpc.aws_internet_gateway.main" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_nat_gateway.main" -> "[root] module.stack.module.vpc.aws_eip.nat"
		"[root] module.stack.module.vpc.aws_nat_gateway.main" -> "[root] module.stack.module.vpc.aws_internet_gateway.main"
		"[root] module.stack.module.vpc.aws_nat_gateway.main" -> "[root] module.stack.module.vpc.aws_subnet.external"
		"[root] module.stack.module.vpc.aws_nat_gateway.main" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route.external" -> "[root] module.stack.module.vpc.aws_internet_gateway.main"
		"[root] module.stack.module.vpc.aws_route.external" -> "[root] module.stack.module.vpc.aws_route_table.external"
		"[root] module.stack.module.vpc.aws_route.external" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route.internal" -> "[root] module.stack.module.vpc.aws_nat_gateway.main"
		"[root] module.stack.module.vpc.aws_route.internal" -> "[root] module.stack.module.vpc.aws_route_table.internal"
		"[root] module.stack.module.vpc.aws_route.internal" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route_table.external" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.vpc.aws_route_table.external" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route_table.internal" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.vpc.aws_route_table.internal" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route_table_association.external" -> "[root] module.stack.module.vpc.aws_route_table.external"
		"[root] module.stack.module.vpc.aws_route_table_association.external" -> "[root] module.stack.module.vpc.aws_subnet.external"
		"[root] module.stack.module.vpc.aws_route_table_association.external" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_route_table_association.internal" -> "[root] module.stack.module.vpc.aws_route_table.internal"
		"[root] module.stack.module.vpc.aws_route_table_association.internal" -> "[root] module.stack.module.vpc.aws_subnet.internal"
		"[root] module.stack.module.vpc.aws_route_table_association.internal" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_subnet.external" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.vpc.aws_subnet.external" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_subnet.internal" -> "[root] module.stack.module.vpc.aws_vpc.main" [color="red"]
		"[root] module.stack.module.vpc.aws_subnet.internal" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.aws_vpc.main" -> "[root] module.stack.module.vpc.provider.aws"
		"[root] module.stack.module.vpc.provider.aws" -> "[root] module.stack.provider.aws (disabled)"
		"[root] module.stack.module.vpc.provider.aws" -> "[root] provider.aws (disabled)"
		"[root] module.stack.provider.aws (disabled)" -> "[root] provider.aws (disabled)"
	}
}
